{"version":3,"sources":["pages/SearchResult/Searching.module.css","components/BackHeader.js","assets/images/noResultImage.png","assets/images/thumb_up.svg","assets/images/pushed_thumb_up.svg","constants/color.js","pages/CharacterList/components/CharacterCard.js","pages/CharacterList/CharacterCardContainer.js","redux/actions/itemActions.js","pages/SearchResult/SearchResult.jsx","components/button/index.jsx","components/header/index.jsx","components/common.js","pages/CharacterDetail/index.js","components/search_bar/index.jsx","assets/images/icon_checked.svg","assets/images/icon_unchecked.svg","components/check_box/index.jsx","pages/CharacterList/components/Header.jsx","assets/images/love_icon.svg","components/spinner/index.jsx","pages/CharacterList/CharacterList.jsx","routes/router.js","App.js","redux/reducers/itemListReducer.js","redux/reducers/rootReducer.js","redux/index.js","index.js"],"names":["module","exports","Header","history","useHistory","onClick","goBack","color","CharacterCard","character","checked","onClickCard","onClickBookmark","status","name","species","gender","CardContainer","ChracterImg","src","image","alt","InfoWapper","Label","bold","StatusColor","Img","pushed_thumb_up","thumb_up","styled","div","img","span","CharacterCardContainer","dispatch","useDispatch","localStorageString","useState","setChecked","id","useEffect","localStorage","getItem","a","type","payload","setBookmarkToggle","removeItem","setItem","JSON","stringify","push","pathname","state","Searching","location","useLocation","searchData","useSelector","itemList","noResultRef","useRef","gsap","from","current","opacity","duration","delay","x","searchWord","words","axios","method","url","params","cancelToken","CancelToken","c","res","data","className","styles","wrapper","section","length","ref","labelWrapper","noResultImg","NoResult","noResult","map","result","SolidButton","children","SolidStyle","button","HeaderContainer","HeaderWrapper","BackBtnHeader","Container","CharacterDetailPage","origin","episode","window","scrollTo","ContentWrapper","Image","el","urls","split","SearchBar","placeholder","onCallback","setWords","onSearch","SearchBarContainer","Input","onKeyDown","event","keyCode","value","onChange","target","input","Checkbox","title","handleClick","imgSrc","CheckedIcon","UnCheckedIcon","CheckBoxWrapper","Button","Wrapper","fetchSearchResult","Spinner","CharacterList","storeData","loading","filter","error","characterIndices","observer","indices","get","lastCharacterRef","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","console","log","newIndices","index","observe","RenderCharaterCards","CardsContainer","idx","CardWrapper","RenderFilteredCharacterCards","StyledContainer","route_list","path","component","page","AppRouter","val","key","exact","to","App","initialState","itemListReducer","action","concat","item","results","String","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4bfce20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Searching_wrapper__2aEGJ\",\"section\":\"Searching_section__xi4gn\",\"labelWrapper\":\"Searching_labelWrapper__mkBS5\",\"noResultImg\":\"Searching_noResultImg__PLDZx\"};","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n// import styles from './Header.module.css';\nconst Header = () => {\n  const history = useHistory();\n  const movePage = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <button onClick={movePage}>BACK</button>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/noResultImage.e3790b11.png\";","export default __webpack_public_path__ + \"static/media/thumb_up.559f79fd.svg\";","export default __webpack_public_path__ + \"static/media/pushed_thumb_up.fc2ad724.svg\";","export const color = {\n  black: '#000000',\n  gray: {\n    900: '#2D2D2D',\n    800: '#3D3D3D',\n    700: '#555555',\n    600: '#6F6F6F',\n    500: '#7F7F7F',\n    400: '#A5A5A5',\n    300: '#CFCFCF',\n    200: '#DFDFDF',\n    100: '#EDEDED',\n    50: '#F8F8F8',\n  },\n  white: '#fff',\n};\n","import React from 'react';\nimport thumb_up from '@assets/images/thumb_up.svg';\nimport pushed_thumb_up from '@assets/images/pushed_thumb_up.svg';\nimport styled from '@emotion/styled';\nimport { color } from '@constants/color';\n\nconst CharacterCard = ({ character, checked, onClickBookmark, onClickCard }) => {\n  const { status, name, species, gender } = character;\n  return (\n    <CardContainer onClick={onClickCard}>\n      <ChracterImg src={character.image} alt=\"사진\" />\n      <InfoWapper>\n        <Label bold={true}>{name}</Label>\n        <Label>{species}</Label>\n        <Label>{gender}</Label>\n      </InfoWapper>\n      <StatusColor status={status} />\n      {checked ? <Img src={pushed_thumb_up} />:<Img src={thumb_up} />}\n    </CardContainer>\n  );\n};\n\nexport default CharacterCard;\n\nconst CardContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid ${color.gray[100]};\n  border-radius: 8px;\n  box-shadow: inset 2px 2px 3px rgba(0, 0, 0, 0.1);\n\n  :hover {\n    cursor: pointer;\n    filter: opacity(70%);\n  }\n`;\nconst ChracterImg = styled.img`\n  border-radius: 8px;\n  width: 250px;\n  height: 250px;\n`;\nconst Label = styled.span`\n  font-size: 14px;\n  font-weight: ${({ bold }) => (bold ? '600' : '400')};\n  color: ${({ bold }) => (bold ? '#3D3D3D' : '#6F6F6F')};\n`;\nconst StatusColor = styled.div`\n  position: absolute;\n  background-color: ${({ status }) => (status === 'Alive' ? 'rgb(26, 202, 26)' : 'rgb(219, 141, 38)')};\n  right: 20px;\n  bottom: 70px;\n  width: 10px;\n  height: 10px;\n  border-radius: 100%;\n`;\nconst InfoWapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n`;\nconst Img = styled.img`\n  position : absolute;\n  right: 20px;\n  bottom: 20px;\n  width: 24px;\n  height: 24px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setBookmarkToggle } from '@redux/actions/itemActions';\nimport CharacterCard from './components/CharacterCard';\n\nconst CharacterCardContainer = ({ character }) => {\n  const dispatch = useDispatch();\n  const localStorageString = 'RickAndMortyDex';\n  const [checked, setChecked] = useState(false);\n  const history = useHistory();\n  const id = character.id;\n\n  useEffect(() => {\n    localStorage.getItem(`${localStorageString}${id}`) ? setChecked(true) : setChecked(false);\n  }, []);\n\n  const handleCardClick = () => {\n    history.push({\n      pathname: `/character/${character.name}`,\n      state: { character: character },\n    });\n  };\n  const handleBookmarkClick = () => {\n    dispatch(setBookmarkToggle(id));\n    localStorage.getItem(`${localStorageString}${id}`)\n      ? localStorage.removeItem(`${localStorageString}${id}`)\n      : localStorage.setItem(`${localStorageString}${id}`, JSON.stringify(character));\n\n    setChecked(!checked);\n  };\n\n  return (\n    <CharacterCard\n      character={character}\n      checked={checked}\n      onClickBookmark={handleBookmarkClick}\n      onClickCard={handleCardClick}\n    />\n  );\n};\n\nexport default CharacterCardContainer;\n","import axios from 'axios';\n\nexport const getItemList = indices => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING',\n    });\n    const res = await axios.get(`https://rickandmortyapi.com/api/character/${indices}`);\n    dispatch({\n      type: 'ITEM_LIST_SUCCESS',\n      payload: res.data,\n    });\n  } catch (e) {\n    dispatch({\n      type: 'LOADING_FAIL',\n    });\n  }\n};\n\nexport const getSearchResult = searchWord => async dispatch => {\n  try {\n    dispatch({\n      type: 'LOADING',\n    });\n    let cancel;\n    const res = await axios({\n      method: 'GET',\n      url: 'https://rickandmortyapi.com/api/character',\n      params: {\n        name: searchWord,\n      },\n      cancelToken: new axios.CancelToken(c => (cancel = c)),\n    });\n    dispatch({\n      type: 'SEARCH_SUCCESS',\n      payload: res.data,\n    });\n  } catch (e) {\n    dispatch({\n      type: 'LOADING_FAIL',\n    });\n  }\n};\n\nexport const setBookmarkToggle = id => async dispatch => {\n  dispatch({\n    type: 'BOOKMARK_TOGGLE',\n    payload: id,\n  });\n};\n\nexport const setFilterToggle = () => async dispatch => {\n  dispatch({\n    type: 'FILTER_TOGGLE',\n  });\n};\n\nexport const setBookmarkTrue = id => async dispatch => {\n  dispatch({\n    type: 'BOOKMARK_TRUE',\n    payload: id,\n  });\n};\n\nexport const updateFetchIndex = index => async dispatch => {\n  dispatch({\n    type: 'UPDATE_CHARACTER_INDEX',\n    payload: index,\n  });\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport Header from '@components/BackHeader';\nimport { getSearchResult } from '../../redux/actions/itemActions';\nimport styles from './Searching.module.css';\nimport NoResult from '../../assets/images/noResultImage.png';\nimport gsap from 'gsap';\nimport CharacterCardContainter from '../CharacterList/CharacterCardContainer';\n\nconst Searching = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const searchData = useSelector(state => state.itemList.searchData);\n  const noResultRef = useRef(null);\n\n  useEffect(() => {\n    gsap.from(noResultRef.current, {\n      opacity: 0,\n      duration: 1,\n      delay: 0.4,\n      x: -30,\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getSearchResult(location.state.words));\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className={styles.wrapper}>\n        <section className={styles.section}>\n          {searchData.length === 0 ? (\n            <div ref={noResultRef} className={styles.labelWrapper}>\n              <img className={styles.noResultImg} src={NoResult}></img>\n              <p className={styles.noResult}>NO RESULT</p>\n            </div>\n          ) : (\n            <></>\n          )}\n          {searchData.map(result => (\n            <CharacterCardContainter character={result} />\n          ))}\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Searching;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { color } from '@constants/color';\nexport const SolidButton = ({ children, onClick }) => {\n  return (\n    <SolidStyle className=\"default\" onClick={onClick}>\n      {children}\n    </SolidStyle>\n  );\n};\n\nconst SolidStyle = styled.button`\n  font-weight: 500;\n  padding: 10px 30px;\n  border-radius: 6px;\n  border: none;\n  outline: none;\n  &.disabled {\n    cursor: default;\n    background-color: ${color.gray[300]};\n    color: ${color.gray[500]};\n  }\n  &.default {\n    background-color: ${color.gray[600]};\n    cursor: pointer;\n    color: ${color.white};\n\n    &:hover {\n      background-color: ${color.gray[800]};\n    }\n    &:active {\n      background-color: ${color.gray[900]};\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { SolidButton } from '@components/button';\nimport { useHistory } from 'react-router-dom';\n\nconst HeaderContainer = ({ children }) => {\n  return <HeaderWrapper>{children}</HeaderWrapper>;\n};\n\nexport default HeaderContainer;\n\nexport const BackBtnHeader = () => {\n  const history = useHistory();\n  return (\n    <HeaderContainer>\n      <SolidButton onClick={() => history.goBack()}>뒤로가기</SolidButton>\n    </HeaderContainer>\n  );\n};\n\nconst HeaderWrapper = styled.div`\n  z-index: 10;\n  position: fixed;\n  width: 100%;\n  padding: 0px 20px;\n  top: 0;\n  left: 0;\n  background-color: #fff;\n  border-bottom: 1px solid #ededed;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  min-height: 65px;\n  flex-wrap: wrap;\n  margin-bottom: 65px;\n`;\nconst Button = styled.button`\n  outline: none;\n  border: none;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1024px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin: auto;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { BackBtnHeader } from '@components/header';\nimport styled from '@emotion/styled';\nimport { Container } from '@components/common';\n\nconst CharacterDetailPage = () => {\n  const locationObj = useLocation();\n  const { image, name, status, species, origin, location, episode } = locationObj.state.character;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Container>\n      <BackBtnHeader />\n      <ContentWrapper>\n        <Image src={image} />\n        <ul>\n          <li>\n            이름 : {name} ({status === 'Alive' ? '생존' : '사망'})\n          </li>\n          <li>종족 : {species}</li>\n          <li>최초 발견지 : {origin.name}</li>\n          <li>마지막 출몰지 : {location.name}👽</li>\n          {/* //TODO: \n        1. collapse list\n        2. how can I make it more clear\n         */}\n          <li>출현 에피소드</li>\n          {episode.map(el => {\n            let urls = el.split('/');\n            return <div>{urls[urls.length - 1]}화</div>;\n          })}\n        </ul>\n      </ContentWrapper>\n    </Container>\n  );\n};\n\nexport default CharacterDetailPage;\n\nconst Image = styled.img`\n  border-radius: 10px;\n`;\nconst ContentWrapper = styled.div`\n  margin: 68px auto;\n`;\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { SolidButton } from '@components/button';\n\nconst SearchBar = ({ placeholder, onCallback }) => {\n  const [words, setWords] = useState('');\n  const ENTER_KEY = 13;\n\n  const setWordState = ({ target }) => {\n    setWords(target.value);\n  };\n\n  const onSearch = () => {\n    if (words == null) return;\n    onCallback();\n    setWords('');\n  };\n\n  const handleKeyDown = () => {\n    if (window.event.keyCode === ENTER_KEY) onSearch();\n  };\n\n  return (\n    <SearchBarContainer>\n      <Input type=\"search\" onKeyDown={handleKeyDown} placeholder={placeholder} value={words} onChange={setWordState} />\n      <SolidButton onClick={onSearch} className={words == '' ? 'disabled' : 'default'}>\n        검색\n      </SolidButton>\n    </SearchBarContainer>\n  );\n};\n\nexport default SearchBar;\n\nconst SearchBarContainer = styled.div`\n  display: flex;\n  border-radius: 6px;\n`;\nconst Input = styled.input`\n  height: auto;\n  border: 1px solid gray;\n  border-radius: 6px;\n  margin-right: 5px;\n`;\n","export default __webpack_public_path__ + \"static/media/icon_checked.3a22d68d.svg\";","export default __webpack_public_path__ + \"static/media/icon_unchecked.322222e2.svg\";","import CheckedIcon from '@assets/images/icon_checked.svg';\nimport UnCheckedIcon from '@assets/images/icon_unchecked.svg';\nimport styled from '@emotion/styled';\n\nconst Checkbox = ({ title, checked, handleClick }) => {\n  let imgSrc = checked ? CheckedIcon : UnCheckedIcon;\n  return (\n    <CheckBoxWrapper>\n      <Button src={imgSrc} onClick={handleClick} alt=\"버튼 : 체크박스\" />\n      <Label>{title}</Label>\n    </CheckBoxWrapper>\n  );\n};\n\nexport default Checkbox;\n\nconst Button = styled.img`\n  all: unset;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\nconst CheckBoxWrapper = styled.div`\n  height: fit-content;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Label = styled.span`\n  margin-left: 6px;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 22px;\n`;\n","import React from 'react';\nimport SearchInput from '@components/search_bar/index.jsx';\nimport styled from '@emotion/styled';\nimport { useHistory } from 'react-router';\nimport Checkbox from '@components/check_box/index.jsx';\nimport HeaderContainer from '@components/header/index';\nimport love_icon from '@assets/images/love_icon.svg';\n\nconst Header = ({ handleClick, checked }) => {\n  const history = useHistory();\n  const fetchSearchResult = words => {\n    history.push({\n      pathname: `searching/${words}`,\n      state: { words: words },\n    });\n  };\n\n  return (\n    <HeaderContainer>\n      <Wrapper>\n        <Checkbox title=\"즐겨찾기\" checked={checked} onClick={handleClick} />\n      </Wrapper>\n      <Wrapper>\n        <SearchInput placeholder=\"캐릭터를 검색해보세요!\" onCallback={words => fetchSearchResult(words)} />\n      </Wrapper>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n\nconst Wrapper = styled.div`\n  padding: 5px 0;\n`;\n","export default __webpack_public_path__ + \"static/media/love_icon.63e23fb7.svg\";","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Spinner = () => {\n  //TODO:\n  return <div>loading...</div>;\n};\n\nexport default Spinner;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItemList, updateFetchIndex } from '@redux/actions/itemActions';\nimport CharacterCardContainer from './CharacterCardContainer';\nimport Header from './components/Header';\nimport { Container } from '@components/common';\nimport styled from '@emotion/styled';\nimport Spinner from '@components/spinner';\n\nconst CharacterList = () => {\n  const dispatch = useDispatch();\n  const storeData = useSelector(state => state.itemList.data);\n  const loading = useSelector(state => state.itemList.loading);\n  const error = useSelector(state => state.itemList.error);\n  const filter = useSelector(state => state.itemList.filter);\n  const characterIndices = useSelector(state => state.itemList.characterIndices);\n  const observer = useRef();\n  const greetingRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(getItemList(characterIndices));\n  }, [characterIndices]);\n\n  // const getBookmark = () => {\n  //   let bookmarkedCharacters = [];\n  //   for (let key in localStorage) {\n  //     if (key.substring(0, 15) === 'RickAndMortyDex') bookmarkedCharacters.push(localStorage[key]);\n  //   }\n  //   let parsedData = [];\n  //   for (let character of bookmarkedCharacters) {\n  //     parsedData.push(JSON.parse(character));\n  //   }\n  //   return parsedData;\n  // };\n\n  const lastCharacterRef = useCallback(\n    node => {\n      if (loading) return;\n      if (filter) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) {\n          console.log('hi');\n          let newIndices = characterIndices.map(el => el + 12);\n          dispatch(updateFetchIndex(newIndices));\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading]\n  );\n\n  const RenderCharaterCards = () => {\n    return (\n      <CardsContainer>\n        {storeData.map((character, idx) =>\n          storeData.length === idx + 1 ? (\n            <CardWrapper ref={lastCharacterRef}>\n              <CharacterCardContainer id={character.id} character={character} />\n            </CardWrapper>\n          ) : (\n            <CardWrapper>\n              <CharacterCardContainer id={idx + 1} character={character} />\n            </CardWrapper>\n          )\n        )}\n      </CardsContainer>\n    );\n  };\n\n  const RenderFilteredCharacterCards = () => {\n    return (\n      <section>\n        {/* {getBookmark().length === 0 ? (\n          <div ref={greetingRef}>\n            <img src={Greetings}></img>\n            <p>NO BOOKMARK</p>\n          </div>\n        ) : (\n          <></>\n        )}\n        {getBookmark().map(character => (\n          <CharacterCardContainer id={character.id} character={character} />\n        ))} */}\n        <div>수정중</div>\n      </section>\n    );\n  };\n  return (\n    <>\n      <Header />\n      <StyledContainer>\n        {filter ? <RenderFilteredCharacterCards /> : <RenderCharaterCards />}\n        {loading ? <Spinner /> : <></>}\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default CharacterList;\n\nconst StyledContainer = styled(Container)`\n  margin: 63px auto;\n`;\nconst CardsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\nconst CardWrapper = styled.div`\n  margin: 10px;\n`;\n","import { Switch, Route, Router, Redirect, useLocation } from 'react-router-dom';\nimport * as page from '@pages/index';\nimport { useEffect } from 'react';\n\nconst route_list = [\n  {\n    path: '/',\n    component: page.CharacterList,\n  },\n  {\n    path: '/character/:name',\n    component: page.CharacterDetail,\n  },\n  {\n    path: '/search/:name',\n    component: page.SearchResult,\n  },\n];\n\n// export const ScrollToTop = () => {\n//   const pathname = useLocation();\n//   useEffect(() => {\n//     window.scrollTo(0, 0);\n//   }, [pathname]);\n//   return null;\n// };\n\nexport default function AppRouter() {\n  return (\n    <>\n      <Switch>\n        {route_list.map((val, key) => (\n          <Route exact {...val} key={key} />\n        ))}\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n","import './App.css';\nimport styled from '@emotion/styled';\nimport AppRouter from './routes/router';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  loading: false,\n  data: [],\n  searchData: [],\n  characterIndices: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n  error: false,\n  filter: false,\n};\n\nconst itemListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        ...state,\n        loading: true,\n        error: false,\n      };\n    case 'ITEM_LIST_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        data: state.data.concat(action.payload.map(item => ({ ...item, checked: false }))),\n        error: false,\n      };\n    case 'SEARCH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        filter: false,\n        searchData: action.payload.results,\n      };\n    case 'LOADING_FAIL':\n      return {\n        ...state,\n        loading: false,\n        searchData: [],\n        error: true,\n      };\n    case 'BOOKMARK_TOGGLE':\n      return {\n        ...state,\n        data: state.data.map(item => (item.id === action.payload ? { ...item, checked: !item.checked } : item)),\n      };\n    case 'FILTER_TOGGLE':\n      return {\n        ...state,\n        filter: !state.filter,\n      };\n    case 'BOOKMARK_TRUE':\n      return {\n        ...state,\n        data: state.data.map(item => (String(item.id) === String(action.payload) ? { ...item, checked: true } : item)),\n      };\n    case 'UPDATE_CHARACTER_INDEX':\n      return {\n        ...state,\n        characterIndices: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default itemListReducer;\n","import {combineReducers} from 'redux';\nimport itemListReducer from './itemListReducer';\n\nconst rootReducer = combineReducers({\n    itemList : itemListReducer\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer.js';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/index';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}