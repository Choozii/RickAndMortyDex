{"version":3,"sources":["pages/SearchResult/Searching.module.css","components/BackHeader.js","assets/images/noResultImage.png","constants/color.js","assets/images/icon_bookmark_default.svg","assets/images/icon_bookmark_selected.svg","pages/CharacterList/components/CharacterCard.js","pages/CharacterList/CharacterCardContainer.js","redux/actions/itemActions.js","pages/SearchResult/SearchResult.jsx","pages/CharacterDetail/components/CharacterDetail.js","pages/CharacterDetail/index.js","assets/images/greetings.png","components/search_bar/index.jsx","assets/images/icon_checked.svg","assets/images/icon_unchecked.svg","components/check_box/index.jsx","components/header/index.jsx","pages/CharacterList/components/Header.jsx","components/common.js","pages/CharacterList/CharacterList.jsx","routes/router.js","App.js","redux/reducers/itemListReducer.js","redux/reducers/rootReducer.js","redux/index.js","index.js"],"names":["module","exports","Header","history","useHistory","onClick","goBack","color","CharacterCard","character","onClickCard","checked","onClickBookmark","status","name","species","gender","CardContainer","ChracterImg","src","image","alt","InfoWapper","Label","bold","StatusColor","styled","div","img","span","CharacterCardContainer","dispatch","useDispatch","localStorageString","useState","setChecked","id","useEffect","localStorage","getItem","a","type","payload","setBookmarkToggle","removeItem","setItem","JSON","stringify","push","pathname","state","Searching","location","useLocation","searchData","useSelector","itemList","noResultRef","useRef","gsap","from","current","opacity","duration","delay","x","searchWord","words","axios","method","url","params","cancelToken","CancelToken","c","res","data","className","styles","wrapper","section","length","ref","labelWrapper","noResultImg","NoResult","noResult","map","result","CharacterDetail","characterInfo","title","origin","CharacterDetailPage","window","scrollTo","SearchBar","placeholder","onCallback","setWords","onSearch","SearchBarContainer","Input","onKeyDown","event","keyCode","value","onChange","e","target","SearchButton","input","button","Checkbox","handleClick","imgSrc","CheckedIcon","UnCheckedIcon","CheckBoxWrapper","Button","HeaderContainer","children","HeaderWrapper","fetchSearchResult","Container","CharacterList","index","setIndex","storeData","loading","filter","error","observer","fetchIndex","greetingRef","idx","charaterList","get","getBookmark","bookmarkedCharacters","key","substring","parsedData","parse","lastCharacterRef","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","RenderCharaterCards","CharaterWrapper","RenderFilteredCharacterCards","Greetings","AppRouter","path","component","page","exact","to","App","initialState","itemListReducer","action","concat","item","results","String","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d700fc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Searching_wrapper__2aEGJ\",\"section\":\"Searching_section__xi4gn\",\"labelWrapper\":\"Searching_labelWrapper__mkBS5\",\"noResultImg\":\"Searching_noResultImg__PLDZx\"};","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n// import styles from './Header.module.css';\nconst Header = () => {\n  const history = useHistory();\n  const movePage = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <button onClick={movePage}>BACK</button>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/noResultImage.e3790b11.png\";","export const color = {\n  black: '#000000',\n  gray: {\n    900: '#2D2D2D',\n    800: '#3D3D3D',\n    700: '#555555',\n    600: '#6F6F6F',\n    500: '#7F7F7F',\n    400: '#A5A5A5',\n    300: '#CFCFCF',\n    200: '#DFDFDF',\n    100: '#EDEDED',\n    50: '#F8F8F8',\n  },\n  white: '#fff',\n};\n","export default __webpack_public_path__ + \"static/media/icon_bookmark_default.a584738a.svg\";","export default __webpack_public_path__ + \"static/media/icon_bookmark_selected.b1b5328d.svg\";","import React from 'react';\nimport icon_bookmark_default from '@assets/images/icon_bookmark_default.svg';\nimport icon_bookmark_selected from '@assets/images/icon_bookmark_selected.svg';\nimport styled from '@emotion/styled';\nimport { color } from '@constants/color';\n\nconst CharacterCard = ({ character, checked, onClickBookmark, onClickCard }) => {\n  const { status, name, species, gender } = character;\n  return (\n    <CardContainer onClick={onClickCard}>\n      <ChracterImg src={character.image} alt=\"사진\" />\n      <InfoWapper>\n        <Label bold={true}>{name}</Label>\n        <Label>{species}</Label>\n        <Label>{gender}</Label>\n      </InfoWapper>\n      <StatusColor status={status} />\n      {/* <button className={styles.bookmarkButton} onClick={onClickHandle}>\n          {checked ? (\n            <img alt=\"아이콘:북마크 선택됨\" lassName={styles.bookmarkImg} src={icon_bookmark_selected}></img>\n          ) : (\n            <img alt=\"아이콘:북마크 해제됨\" className={styles.bookmarkImg} src={icon_bookmark_default}></img>\n          )}\n        </button>  */}\n    </CardContainer>\n  );\n};\n\nexport default CharacterCard;\n\nconst CardContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid ${color.gray[100]};\n  border-radius: 8px;\n  box-shadow: inset 2px 2px 3px rgba(0, 0, 0, 0.1);\n\n  :hover {\n    cursor: pointer;\n    filter: opacity(70%);\n  }\n`;\nconst ChracterImg = styled.img`\n  border-radius: 8px;\n  width: 250px;\n  height: 250px;\n`;\nconst Label = styled.span`\n  font-size: 14px;\n  font-weight: ${({ bold }) => (bold ? '600' : '400')};\n  color: ${({ bold }) => (bold ? '#3D3D3D' : '#6F6F6F')};\n`;\nconst StatusColor = styled.div`\n  position: absolute;\n  background-color: ${({ status }) => (status === 'Alive' ? 'rgb(26, 202, 26)' : 'rgb(219, 141, 38)')};\n  right: 20px;\n  bottom: 70px;\n  width: 10px;\n  height: 10px;\n  border-radius: 100%;\n`;\nconst InfoWapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setBookmarkToggle } from '@redux/actions/itemActions';\nimport CharacterCard from './components/CharacterCard';\n\nconst CharacterCardContainer = ({ character }) => {\n  const dispatch = useDispatch();\n  const localStorageString = 'RickAndMortyDex';\n  const [checked, setChecked] = useState(false);\n  const history = useHistory();\n  const id = character.id;\n\n  useEffect(() => {\n    localStorage.getItem(`${localStorageString}${id}`) ? setChecked(true) : setChecked(false);\n  }, []);\n\n  const handleCardClick = () => {\n    history.push({\n      pathname: `/character/${character.name}`,\n      state: { character: character },\n    });\n  };\n  const handleBookmarkClick = () => {\n    dispatch(setBookmarkToggle(id));\n    localStorage.getItem(`${localStorageString}${id}`)\n      ? localStorage.removeItem(`${localStorageString}${id}`)\n      : localStorage.setItem(`${localStorageString}${id}`, JSON.stringify(character));\n\n    setChecked(!checked);\n  };\n\n  return (\n    <CharacterCard\n      character={character}\n      checked={checked}\n      onClickBookmark={handleBookmarkClick}\n      onClickCard={handleCardClick}\n    />\n  );\n};\n\nexport default CharacterCardContainer;\n","import axios from \"axios\";\n\nexport const getItemList = (charaterList) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"LOADING\",\n    });\n  \n    const res = await axios.get(`https://rickandmortyapi.com/api/character/${charaterList}`);\n    dispatch({\n      type: \"ITEM_LIST_SUCCESS\",\n      payload: res.data,\n    });\n  } catch (e) {\n    dispatch({\n      type: \"LOADING_FAIL\",\n    });\n  }\n};\n\nexport const getSearchResult = (searchWord) => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"LOADING\",\n    });\n    let cancel;\n    const res = await axios({\n            method: 'GET',\n            url: 'https://rickandmortyapi.com/api/character',\n            params: {\n                name: searchWord\n            },\n            cancelToken: new axios.CancelToken(c => cancel = c)\n        });\n    dispatch({\n      type: \"SEARCH_SUCCESS\",\n      payload: res.data,\n    });\n  } catch (e) {\n    dispatch({\n      type: \"LOADING_FAIL\",\n    });\n  }\n};\n\n\nexport const setBookmarkToggle = (id) => async (dispatch) => {\n  dispatch({\n    type: \"BOOKMARK_TOGGLE\",\n    payload: id,\n  });\n};\n\nexport const setFilterToggle = () => async (dispatch) => {\n  dispatch({\n    type: \"FILTER_TOGGLE\",\n  });\n};\n\nexport const setBookmarkTrue = (id) => async (dispatch) => {\n  dispatch({\n    type: \"BOOKMARK_TRUE\",\n    payload: id,\n  });\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport Header from '@components/BackHeader';\nimport { getSearchResult } from '../../redux/actions/itemActions';\nimport styles from './Searching.module.css';\nimport NoResult from '../../assets/images/noResultImage.png';\nimport gsap from 'gsap';\nimport CharacterCardContainter from '../CharacterList/CharacterCardContainer';\n\nconst Searching = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const searchData = useSelector(state => state.itemList.searchData);\n  const noResultRef = useRef(null);\n\n  useEffect(() => {\n    gsap.from(noResultRef.current, {\n      opacity: 0,\n      duration: 1,\n      delay: 0.4,\n      x: -30,\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getSearchResult(location.state.words));\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className={styles.wrapper}>\n        <section className={styles.section}>\n          {searchData.length === 0 ? (\n            <div ref={noResultRef} className={styles.labelWrapper}>\n              <img className={styles.noResultImg} src={NoResult}></img>\n              <p className={styles.noResult}>NO RESULT</p>\n            </div>\n          ) : (\n            <></>\n          )}\n          {searchData.map(result => (\n            <CharacterCardContainter character={result} />\n          ))}\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Searching;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst CharacterDetail = ({ characterInfo }) => {\n  return (\n    <div>\n      <div>\n        <img src={characterInfo.image}></img>\n      </div>\n      <div>\n        {characterInfo.name}\n        {characterInfo.status === 'Alive' ? <div title=\"alive\"></div> : <div title=\"dead\"></div>}\n      </div>\n      <div></div>\n      <div>{characterInfo.species}</div>\n\n      <div>First seen in {characterInfo.origin.name}</div>\n      <div>Last known location is {characterInfo.location.name}👽</div>\n    </div>\n  );\n};\n\nexport default CharacterDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport CharacterDetail from './components/CharacterDetail';\nimport Header from '@components/BackHeader';\n\nconst CharacterDetailPage = () => {\n  const location = useLocation();\n  const character = location.state.character;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <CharacterDetail characterInfo={character} />\n    </>\n  );\n};\n\nexport default CharacterDetailPage;\n","export default __webpack_public_path__ + \"static/media/greetings.6ddd7d90.png\";","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { color } from '@constants/color';\n\nconst SearchBar = ({ placeholder, onCallback }) => {\n  const [words, setWords] = useState('');\n  const ENTER_KEY = 13;\n  const getWords = e => {\n    setWords(e.target.value);\n  };\n  const onSearch = () => {\n    onCallback();\n    setWords('');\n  };\n\n  const handleKeyDown = () => {\n    if (window.event.keyCode === ENTER_KEY) onSearch();\n  };\n\n  return (\n    <SearchBarContainer>\n      <Input type=\"search\" onKeyDown={handleKeyDown} placeholder={placeholder} value={words} onChange={getWords} />\n      <SearchButton type=\"submit\" onClick={onSearch}>\n        검색\n      </SearchButton>\n    </SearchBarContainer>\n  );\n};\n\nexport default SearchBar;\n\nconst SearchBarContainer = styled.div`\n  display: flex;\n  border-radius: 6px;\n`;\nconst Input = styled.input`\n  height: auto;\n  border: 1px solid gray;\n  border-radius: 6px;\n  margin-right: 5px;\n`;\nconst SearchButton = styled.button`\n  font-weight: 700;\n  color: ${color.white};\n  padding: 10px 30px;\n  background-color: ${color.gray[300]};\n  border-radius: 6px;\n  border: none;\n  outline: none;\n  :hover {\n    background-color: ${color.gray[600]};\n  }\n  :active {\n    background-color: ${color.gray[400]};\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/icon_checked.3a22d68d.svg\";","export default __webpack_public_path__ + \"static/media/icon_unchecked.322222e2.svg\";","import CheckedIcon from '@assets/images/icon_checked.svg';\nimport UnCheckedIcon from '@assets/images/icon_unchecked.svg';\nimport styled from '@emotion/styled';\n\nconst Checkbox = ({ title, checked, handleClick }) => {\n  let imgSrc = checked ? CheckedIcon : UnCheckedIcon;\n  return (\n    <CheckBoxWrapper>\n      <Button src={imgSrc} onClick={handleClick} alt=\"버튼 : 체크박스\" />\n      <Label>{title}</Label>\n    </CheckBoxWrapper>\n  );\n};\n\nexport default Checkbox;\n\nconst Button = styled.img`\n  all: unset;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n`;\nconst CheckBoxWrapper = styled.div`\n  height: fit-content;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Label = styled.span`\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 22px;\n`;\n","import styled from '@emotion/styled';\n\nconst HeaderContainer = ({ children }) => {\n  return <HeaderWrapper>{children}</HeaderWrapper>;\n};\n\nexport default HeaderContainer;\n\nconst HeaderWrapper = styled.div`\n  z-index: 10;\n  position: fixed;\n  width: 100%;\n  padding: 0 20px;\n  top: 0;\n  left: 0;\n  background-color: #fff;\n  border-bottom: 1px solid #ededed;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 65px;\n  margin-bottom: 65px;\n`;\n","import React from 'react';\nimport SearchInput from '@components/search_bar/index.jsx';\nimport styled from '@emotion/styled';\nimport { useHistory } from 'react-router';\nimport Checkbox from '@components/check_box/index.jsx';\nimport HeaderContainer from '@components/header/index';\n\nconst Header = ({ handleClick, checked }) => {\n  const history = useHistory();\n  const fetchSearchResult = words => {\n    history.push({\n      pathname: `searching/${words}`,\n      state: { words: words },\n    });\n  };\n\n  return (\n    <HeaderContainer>\n      <Checkbox title=\"즐겨찾기\" checked={checked} onClick={handleClick} />\n      <SearchInput placeholder=\"캐릭터를 검색해보세요!\" onCallback={words => fetchSearchResult(words)} />\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 1024px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  margin: auto;\n`;\n","import React, { useEffect, useRef, useState, useReducer, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getItemList } from '../../redux/actions/itemActions';\nimport CharacterCardContainer from './CharacterCardContainer';\nimport Greetings from '../../assets/images/greetings.png';\nimport { gsap } from 'gsap';\nimport Header from './components/Header';\nimport { Container } from '@components/common';\nimport styled from '@emotion/styled';\n\nconst CharacterList = () => {\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState(); //렌더링을 위한 캐릭터 번호 저장\n  const storeData = useSelector(state => state.itemList.data);\n  const loading = useSelector(state => state.itemList.loading);\n  const error = useSelector(state => state.itemList.error);\n  const filter = useSelector(state => state.itemList.filter);\n  const observer = useRef();\n  let fetchIndex = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  const greetingRef = useRef(null);\n\n  useEffect(() => {\n    gsap.from(greetingRef.current, {\n      opacity: 0,\n      duration: 1,\n      delay: 0.4,\n      x: -30,\n    });\n  }, [filter]);\n\n  useEffect(() => {\n    //화면에 처음 접속한 경우\n    if (storeData.length === 0) setIndex(fetchIndex);\n    //다른 화면에서 돌아온 경우는 스토어 내부의 데이터 길이를 참조해서 인덱스를 구함\n    else if (storeData.length !== 0) {\n      fetchIndex = fetchIndex.map(idx => idx + storeData.length);\n    }\n  }, []);\n\n  useEffect(() => {\n    dispatch(getItemList(index));\n  }, [index]);\n\n  const getBookmark = () => {\n    let bookmarkedCharacters = [];\n    for (let key in localStorage) {\n      if (key.substring(0, 15) === 'RickAndMortyDex') bookmarkedCharacters.push(localStorage[key]);\n    }\n    let parsedData = [];\n    for (let character of bookmarkedCharacters) {\n      parsedData.push(JSON.parse(character));\n    }\n    return parsedData;\n  };\n\n  const lastCharacterRef = useCallback(\n    node => {\n      if (loading) return;\n      if (filter) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) {\n          fetchIndex = fetchIndex.map(idx => idx + storeData.length);\n          setIndex(fetchIndex);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading]\n  );\n\n  const RenderCharaterCards = () => {\n    return (\n      <CharaterWrapper>\n        {storeData.map((character, idx) =>\n          storeData.length === idx + 1 ? (\n            <div ref={lastCharacterRef}>\n              <CharacterCardContainer id={character.id} character={character} />\n            </div>\n          ) : (\n            <CharacterCardContainer id={idx + 1} character={character} />\n          )\n        )}\n      </CharaterWrapper>\n    );\n  };\n\n  const RenderFilteredCharacterCards = () => {\n    return (\n      <section>\n        {getBookmark().length === 0 ? (\n          <div ref={greetingRef}>\n            <img src={Greetings}></img>\n            <p>NO BOOKMARK</p>\n          </div>\n        ) : (\n          <></>\n        )}\n        {getBookmark().map(character => (\n          <CharacterCardContainer id={character.id} character={character} />\n        ))}\n      </section>\n    );\n  };\n  return (\n    <>\n      <Header />\n      <Container>\n        {storeData.length === 0 && <div>Sorry, there's no Data</div>}\n        {filter ? <RenderFilteredCharacterCards /> : <RenderCharaterCards />}\n        {loading ? <div>...loading</div> : <></>}\n      </Container>\n    </>\n  );\n};\n\nexport default CharacterList;\n\nconst CharaterWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { Switch, Route, Router, Redirect } from 'react-router-dom';\nimport * as page from '@pages/index';\nexport default function AppRouter() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={page.CharacterList}></Route>\n      <Route path=\"/character/:name\" exact component={page.CharacterDetail}></Route>\n      <Route path=\"/searching/:name\" component={page.SearchResult}></Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n","import './App.css';\nimport styled from '@emotion/styled';\nimport AppRouter from './routes/router';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    loading: false,\n    data: [],\n    searchData:[],\n    error: false,\n    filter: false,\n  };\n  \n  const itemListReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case \"LOADING\":\n        return {\n          ...state,\n          loading: true,\n          error: false,\n        };\n      case \"ITEM_LIST_SUCCESS\":\n        return {\n          ...state,\n          loading: false,\n          data: state.data.concat(action.payload.map(item => ({...item, 'checked' : false}))),\n          error: false,\n        };\n      case \"SEARCH_SUCCESS\":\n        return{\n          ...state,\n          loading : false,\n          error:false,\n          filter:false,\n          searchData:action.payload.results\n        }\n      case \"LOADING_FAIL\":\n        return {\n          ...state,\n          loading: false,\n          searchData:[],\n          error: true,\n        };\n      case \"BOOKMARK_TOGGLE\":\n        return {\n          ...state,\n          data: state.data.map((item) =>\n            item.id === action.payload\n              ? { ...item, checked: !item.checked }\n              : item\n          ),\n        };\n      case \"FILTER_TOGGLE\":\n        return {\n          ...state,\n          filter: !state.filter,\n        };\n      case \"BOOKMARK_TRUE\":\n        return {\n          ...state,\n          data: state.data.map((item) =>\n            String(item.id) === String(action.payload)\n              ? { ...item, checked: true }\n              : item\n          ),\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default itemListReducer;\n  ","import {combineReducers} from 'redux';\nimport itemListReducer from './itemListReducer';\n\nconst rootReducer = combineReducers({\n    itemList : itemListReducer\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer.js';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/index';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}